#usda 1.0
(
    defaultPrim = "_geom_63"
    metersPerUnit = 1
    upAxis = "Z"
)

def Mesh "_geom_63"
{
    custom float4 axisangle = (0, 0, 0, 0)
    custom int conaffinity = 0
    custom int condim = 3
    custom int contype = 0
    custom float density = 1000
    uniform bool doubleSided = 1
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125]
    custom float3 friction = (1, 0.005, 0.0001)
    custom float3 geomSize = (1, 1, 1)
    custom int group = 2
    custom bool hasFromto = 0
    custom bool hasMass = 0
    custom float margin = 0
    custom string material = "off_white"
    rel material:binding = </Looks/material_panda_gray>
    custom string mesh = "hand_0"
    custom string meshFile = "D:/Repo/OrcaGym/envs/assets/panda_mujoco_gym/meshes/hand_0.obj"
    custom bool mjcfGeom = 1
    custom string name = "_geom_63"
    normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(0.0153, 0.0663, 0.0111), (0.0153, 0.0685, 0.0264), (0.0153, -0.0685, 0.0264), (-0.0153, 0.0685, 0.0264), (-0.0153, 0.0663, 0.0111), (-0.0153, -0.0685, 0.0264), (0.0153, 0.0693, 0.0262), (0.0153, 0.0685, 0.0264), (0.0153, 0.072, 0.0221), (0.0153, -0.0685, 0.0264), (0.0153, -0.0696, 0.0261), (0.0153, -0.0708, 0.0253), (0.0153, -0.0708, 0.0253), (0.0153, -0.0716, 0.0242), (0.0153, -0.072, 0.0227), (0.0153, -0.072, 0.0227), (0.0153, -0.0719, 0.0216), (0.0153, -0.0708, 0.0253), (0.0153, -0.0708, 0.0176), (0.0153, -0.0693, 0.0132), (0.0153, -0.0664, 0.0111), (0.0153, -0.0685, 0.0121), (0.0153, -0.0676, 0.0115), (0.0153, -0.0693, 0.0132), (0.0153, -0.0664, 0.0111), (0.0153, 0.0663, 0.0111), (0.0153, -0.0685, 0.0264), (0.0153, 0.0675, 0.0115), (0.0153, 0.0686, 0.0122), (0.0153, 0.0694, 0.0134), (0.0153, 0.0694, 0.0134), (0.0153, 0.0663, 0.0111), (0.0153, 0.0675, 0.0115), (0.0153, 0.072, 0.0221), (0.0153, 0.0719, 0.0232), (0.0153, 0.0693, 0.0262), (0.0153, 0.0716, 0.0243), (0.0153, 0.0709, 0.0252), (0.0153, 0.0719, 0.0232), (0.0153, 0.0702, 0.0258), (0.0153, 0.0693, 0.0262), (0.0153, 0.0709, 0.0252), (0.0153, -0.0685, 0.0264), (0.0153, -0.0708, 0.0253), (0.0153, -0.0719, 0.0216), (0.0153, -0.0719, 0.0216), (0.0153, -0.0708, 0.0176), (0.0153, -0.0685, 0.0264), (0.0153, -0.0676, 0.0115), (0.0153, -0.0664, 0.0111), (0.0153, -0.0693, 0.0132), (0.0153, 0.0694, 0.0134), (0.0153, 0.0709, 0.0182), (0.0153, 0.0663, 0.0111), (0.0153, 0.0719, 0.0232), (0.0153, 0.0709, 0.0252), (0.0153, 0.0693, 0.0262), (0.0153, 0.0685, 0.0264), (0.0153, 0.0663, 0.0111), (0.0153, 0.0709, 0.0182), (0.0153, -0.0708, 0.0176), (0.0153, -0.0664, 0.0111), (0.0153, -0.0685, 0.0264), (0.0153, 0.0709, 0.0182), (0.0153, 0.072, 0.0221), (0.0153, 0.0685, 0.0264), (-0.0153, -0.0676, 0.0115), (-0.0153, -0.0685, 0.0121), (-0.0153, -0.0693, 0.0132), (-0.0153, -0.0693, 0.0132), (-0.0153, -0.0708, 0.0176), (-0.0153, -0.0664, 0.0111), (-0.0153, -0.0719, 0.0216), (-0.0153, -0.072, 0.0227), (-0.0153, -0.0708, 0.0253), (-0.0153, -0.0716, 0.0242), (-0.0153, -0.0708, 0.0253), (-0.0153, -0.072, 0.0227), (-0.0153, -0.0696, 0.0261), (-0.0153, -0.0685, 0.0264), (-0.0153, -0.0708, 0.0253), (-0.0153, 0.0685, 0.0264), (-0.0153, 0.0693, 0.0262), (-0.0153, 0.0719, 0.0232), (-0.0153, 0.0702, 0.0258), (-0.0153, 0.0709, 0.0252), (-0.0153, 0.0693, 0.0262), (-0.0153, 0.0716, 0.0243), (-0.0153, 0.0719, 0.0232), (-0.0153, 0.0709, 0.0252), (-0.0153, 0.072, 0.0221), (-0.0153, 0.0685, 0.0264), (-0.0153, 0.0719, 0.0232), (-0.0153, 0.0694, 0.0134), (-0.0153, 0.0686, 0.0122), (-0.0153, 0.0675, 0.0115), (-0.0153, 0.0675, 0.0115), (-0.0153, 0.0663, 0.0111), (-0.0153, 0.0694, 0.0134), (-0.0153, -0.0664, 0.0111), (-0.0153, -0.0676, 0.0115), (-0.0153, -0.0693, 0.0132), (-0.0153, -0.0708, 0.0176), (-0.0153, -0.0719, 0.0216), (-0.0153, -0.0685, 0.0264), (-0.0153, -0.0708, 0.0253), (-0.0153, -0.0685, 0.0264), (-0.0153, -0.0719, 0.0216), (-0.0153, 0.0693, 0.0262), (-0.0153, 0.0709, 0.0252), (-0.0153, 0.0719, 0.0232), (-0.0153, 0.072, 0.0221), (-0.0153, 0.0709, 0.0182), (-0.0153, 0.0685, 0.0264), (-0.0153, 0.0694, 0.0134), (-0.0153, 0.0663, 0.0111), (-0.0153, 0.0709, 0.0182), (-0.0153, -0.0664, 0.0111), (-0.0153, -0.0708, 0.0176), (-0.0153, -0.0685, 0.0264), (-0.0153, -0.0685, 0.0264), (-0.0153, 0.0663, 0.0111), (-0.0153, -0.0664, 0.0111), (-0.0153, 0.0709, 0.0182), (-0.0153, 0.0663, 0.0111), (-0.0153, 0.0685, 0.0264)]
    custom float3 pos = (0, 0, 0)
    texCoord2f[] primvars:st = [(0.2148, 0.9607), (0.108, 0.9756), (0.108, 0.0244), (0.1069, 0.9756), (-0, 0.9607), (0.1068, 0.0244), (0.1094, 0.9816), (0.108, 0.9756), (0.1379, 1), (0.108, 0.0244), (0.1101, 0.0163), (0.1157, 0.0082), (0.1157, 0.0082), (0.1233, 0.0027), (0.134, -0), (0.134, -0), (0.1417, 0.0008), (0.1157, 0.0082), (0.1693, 0.0085), (0.1999, 0.0185), (0.2148, 0.0388), (0.2075, 0.0243), (0.2119, 0.0305), (0.1999, 0.0185), (0.2148, 0.0388), (0.2148, 0.9607), (0.108, 0.0244), (0.212, 0.9693), (0.2066, 0.9768), (0.1986, 0.9821), (0.1986, 0.9821), (0.2148, 0.9607), (0.212, 0.9693), (0.1379, 1), (0.1303, 0.9995), (0.1094, 0.9816), (0.1229, 0.9972), (0.1164, 0.9925), (0.1303, 0.9995), (0.1122, 0.9875), (0.1094, 0.9816), (0.1164, 0.9925), (0.108, 0.0244), (0.1157, 0.0082), (0.1417, 0.0008), (0.1417, 0.0008), (0.1693, 0.0085), (0.108, 0.0244), (0.2119, 0.0305), (0.2148, 0.0388), (0.1999, 0.0185), (0.1986, 0.9821), (0.1652, 0.9929), (0.2148, 0.9607), (0.1303, 0.9995), (0.1164, 0.9925), (0.1094, 0.9816), (0.108, 0.9756), (0.2148, 0.9607), (0.1652, 0.9929), (0.1693, 0.0085), (0.2148, 0.0388), (0.108, 0.0244), (0.1652, 0.9929), (0.1379, 1), (0.108, 0.9756), (0.003, 0.0305), (0.0073, 0.0243), (0.0149, 0.0185), (0.0149, 0.0185), (0.0456, 0.0085), (0.0001, 0.0388), (0.0731, 0.0008), (0.0808, 0), (0.0991, 0.0082), (0.0915, 0.0027), (0.0991, 0.0082), (0.0808, 0), (0.1047, 0.0163), (0.1068, 0.0244), (0.0991, 0.0082), (0.1069, 0.9756), (0.1054, 0.9816), (0.0846, 0.9995), (0.1026, 0.9875), (0.0984, 0.9925), (0.1054, 0.9816), (0.0919, 0.9972), (0.0846, 0.9995), (0.0984, 0.9925), (0.0769, 1), (0.1069, 0.9756), (0.0846, 0.9995), (0.0162, 0.9821), (0.0082, 0.9768), (0.0028, 0.9693), (0.0028, 0.9693), (-0, 0.9607), (0.0162, 0.9821), (0.0001, 0.0388), (0.003, 0.0305), (0.0149, 0.0185), (0.0456, 0.0085), (0.0731, 0.0008), (0.1068, 0.0244), (0.0991, 0.0082), (0.1068, 0.0244), (0.0731, 0.0008), (0.1054, 0.9816), (0.0984, 0.9925), (0.0846, 0.9995), (0.0769, 1), (0.0497, 0.9929), (0.1069, 0.9756), (0.0162, 0.9821), (-0, 0.9607), (0.0497, 0.9929), (0.0001, 0.0388), (0.0456, 0.0085), (0.1068, 0.0244), (0.1068, 0.0244), (-0, 0.9607), (0.0001, 0.0388), (0.0497, 0.9929), (-0, 0.9607), (0.1069, 0.9756)] (
        interpolation = "faceVarying"
    )
    custom quatf quat = (1, 0, 0, 0)
    custom float4 rgba = (0.5, 0.5, 0.5, 1)
    custom float3 solimp = (0.9, 0.95, 0.001)
    custom float2 solref = (0.02, 1)
    custom string type = "mesh"
    custom float3 zaxis = (0, 0, 0)
}

def Scope "Looks"
{
    def Material "material_panda_gray"
    {
        token outputs:surface.connect = </Looks/material_panda_gray/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1)
            color3f inputs:emissive_color = (0, 0, 0)
            float inputs:metallic = 0
            token outputs:surface
        }
    }
}

