#usda 1.0
(
    defaultPrim = "_geom_41"
    metersPerUnit = 1
    upAxis = "Z"
)

def Mesh "_geom_41"
{
    custom float4 axisangle = (0, 0, 0, 0)
    custom int conaffinity = 0
    custom int condim = 3
    custom int contype = 0
    custom float density = 1000
    uniform bool doubleSided = 1
    int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146]
    custom float3 friction = (1, 0.005, 0.0001)
    custom float3 geomSize = (1, 1, 1)
    custom int group = 2
    custom bool hasFromto = 0
    custom bool hasMass = 0
    custom float margin = 0
    custom string material = "white"
    rel material:binding = </Looks/material_panda_white>
    custom string mesh = "link6_5"
    custom string meshFile = "/panda_mocap/meshes/link6_5.obj"
    custom bool mjcfGeom = 1
    custom string name = "_geom_41"
    normal3f[] normals = [(-0.69267154, 0.7192828, -0.053275216), (-0.69267154, 0.7192828, -0.053275216), (-0.69267154, 0.7192828, -0.053275216), (-0.48109522, 0.8720147, -0.09020996), (-0.48109522, 0.8720147, -0.09020996), (-0.48109522, 0.8720147, -0.09020996), (-0.6302443, 0.77227557, -0.079891935), (-0.6302443, 0.77227557, -0.079891935), (-0.6302443, 0.77227557, -0.079891935), (0, 0.993409, -0.1146232), (0, 0.993409, -0.1146232), (0, 0.993409, -0.1146232), (-0.5353041, 0.84119076, -0.076470725), (-0.5353041, 0.84119076, -0.076470725), (-0.5353041, 0.84119076, -0.076470725), (-0.035910647, 0.99353117, -0.10773139), (-0.035910647, 0.99353117, -0.10773139), (-0.035910647, 0.99353117, -0.10773139), (-0.73871744, 0.66484416, -0.11080925), (-0.73871744, 0.66484416, -0.11080925), (-0.73871744, 0.66484416, -0.11080925), (-0.21288666, 0.8515942, -0.47902656), (-0.21288666, 0.8515942, -0.47902656), (-0.21288666, 0.8515942, -0.47902656), (-0.3715258, 0.79611754, -0.47766665), (-0.3715258, 0.79611754, -0.47766665), (-0.3715258, 0.79611754, -0.47766665), (-0.1690309, 0.8451561, -0.50708956), (-0.1690309, 0.8451561, -0.50708956), (-0.1690309, 0.8451561, -0.50708956), (0.81649184, 0.40825355, -0.4082526), (0.81649184, 0.40825355, -0.4082526), (0.81649184, 0.40825355, -0.4082526), (0.27668715, 0.4842012, -0.83005625), (0.27668715, 0.4842012, -0.83005625), (0.27668715, 0.4842012, -0.83005625), (0.53451896, 0.8017853, -0.26726383), (0.53451896, 0.8017853, -0.26726383), (0.53451896, 0.8017853, -0.26726383), (0.81649184, 0.40825355, -0.4082526), (0.81649184, 0.40825355, -0.4082526), (0.81649184, 0.40825355, -0.4082526), (0.5746949, 0.2873528, -0.7662598), (0.5746949, 0.2873528, -0.7662598), (0.5746949, 0.2873528, -0.7662598), (0.22326173, 0.8930302, -0.39070606), (0.22326173, 0.8930302, -0.39070606), (0.22326173, 0.8930302, -0.39070606), (0.29443944, 0.46619925, -0.83424443), (0.29443944, 0.46619925, -0.83424443), (0.29443944, 0.46619925, -0.83424443), (-0.1075499, 0.43022364, -0.8962927), (-0.1075499, 0.43022364, -0.8962927), (-0.1075499, 0.43022364, -0.8962927), (-0.50951356, 0.43112057, -0.7446684), (-0.50951356, 0.43112057, -0.7446684), (-0.50951356, 0.43112057, -0.7446684), (0.15430638, 0.617214, -0.7715156), (0.15430638, 0.617214, -0.7715156), (0.15430638, 0.617214, -0.7715156), (0.34874043, 0.8137349, -0.46499008), (0.34874043, 0.8137349, -0.46499008), (0.34874043, 0.8137349, -0.46499008), (-0.7671996, 0.49641776, -0.4061702), (-0.7671996, 0.49641776, -0.4061702), (-0.7671996, 0.49641776, -0.4061702), (-0.57735467, 0.5773452, -0.5773509), (-0.57735467, 0.5773452, -0.5773509), (-0.57735467, 0.5773452, -0.5773509), (0.19462954, 0.9731912, -0.122548744), (0.19462954, 0.9731912, -0.122548744), (0.19462954, 0.9731912, -0.122548744), (0.89113444, 0.4455755, -0.085684575), (0.89113444, 0.4455755, -0.085684575), (0.89113444, 0.4455755, -0.085684575), (0.94422877, 0.31472728, -0.096843496), (0.94422877, 0.31472728, -0.096843496), (0.94422877, 0.31472728, -0.096843496), (0.7029595, 0.7029595, -0.108147435), (0.7029595, 0.7029595, -0.108147435), (0.7029595, 0.7029595, -0.108147435), (0.530665, 0.83391, -0.15162055), (0.530665, 0.83391, -0.15162055), (0.530665, 0.83391, -0.15162055), (0.7029595, 0.7029595, -0.108147435), (0.7029595, 0.7029595, -0.108147435), (0.7029595, 0.7029595, -0.108147435), (0.24036765, 0.9614527, -0.13353719), (0.24036765, 0.9614527, -0.13353719), (0.24036765, 0.9614527, -0.13353719), (-0.74279183, 0.5570736, 0.37138814), (-0.74279183, 0.5570736, 0.37138814), (-0.74279183, 0.5570736, 0.37138814), (-0.042324286, 0.80433553, 0.5926661), (-0.042324286, 0.80433553, 0.5926661), (-0.042324286, 0.80433553, 0.5926661), (-0.3651404, 0.91287607, 0.18256466), (-0.3651404, 0.91287607, 0.18256466), (-0.3651404, 0.91287607, 0.18256466), (0.47672415, 0.57208747, 0.6674205), (0.47672415, 0.57208747, 0.6674205), (0.47672415, 0.57208747, 0.6674205), (0.38348734, 0.69027156, 0.6135655), (0.38348734, 0.69027156, 0.6135655), (0.38348734, 0.69027156, 0.6135655), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.15499015, 0.9687335, 0.19373551), (-0.15499015, 0.9687335, 0.19373551), (-0.15499015, 0.9687335, 0.19373551), (0.55708194, 0.7427813, 0.37139696), (0.55708194, 0.7427813, 0.37139696), (0.55708194, 0.7427813, 0.37139696), (-0.41036063, 0.5471475, 0.72954357), (-0.41036063, 0.5471475, 0.72954357), (-0.41036063, 0.5471475, 0.72954357), (0.66666543, 0.66666543, 0.3333384), (0.66666543, 0.66666543, 0.3333384), (0.66666543, 0.66666543, 0.3333384), (-0.52941, 0.70588, 0.47059396), (-0.52941, 0.70588, 0.47059396), (-0.52941, 0.70588, 0.47059396), (0.19587247, 0.9794061, -0.04896537), (0.19587247, 0.9794061, -0.04896537), (0.19587247, 0.9794061, -0.04896537), (0.38348988, 0.6902589, 0.6135781), (0.38348988, 0.6902589, 0.6135781), (0.38348988, 0.6902589, 0.6135781), (-0.1561749, 0.31234398, 0.9370436), (-0.1561749, 0.31234398, 0.9370436), (-0.1561749, 0.31234398, 0.9370436), (-0.28734964, 0.57468855, 0.7662657), (-0.28734964, 0.57468855, 0.7662657), (-0.28734964, 0.57468855, 0.7662657), (0.76834273, 0.5488333, 0.32928914), (0.76834273, 0.5488333, 0.32928914), (0.76834273, 0.5488333, 0.32928914), (0.88226324, 0.29407316, 0.36760378), (0.88226324, 0.29407316, 0.36760378), (0.88226324, 0.29407316, 0.36760378), (0.76537746, 0.4783733, 0.43053016), (0.76537746, 0.4783733, 0.43053016), (0.76537746, 0.4783733, 0.43053016), (0.66666543, 0.66666543, 0.3333384), (0.66666543, 0.66666543, 0.3333384), (0.66666543, 0.66666543, 0.3333384)] (
        interpolation = "faceVarying"
    )
    point3f[] points = [(0.0874, 0.078, 0.0121), (0.0871, 0.0776, 0.0106), (0.0872, 0.0778, 0.012), (0.0878, 0.0782, 0.0119), (0.0874, 0.0777, 0.0092), (0.0874, 0.078, 0.0121), (0.0874, 0.078, 0.0121), (0.0874, 0.0777, 0.0092), (0.0871, 0.0776, 0.0106), (0.0882, 0.0782, 0.0119), (0.0877, 0.0779, 0.0093), (0.0878, 0.0782, 0.0119), (0.0878, 0.0782, 0.0119), (0.0877, 0.0779, 0.0093), (0.0874, 0.0777, 0.0092), (0.0882, 0.0782, 0.0119), (0.088, 0.0779, 0.0092), (0.0877, 0.0779, 0.0093), (0.0871, 0.0774, 0.0094), (0.0871, 0.0776, 0.0106), (0.0874, 0.0777, 0.0092), (0.0877, 0.0776, 0.0088), (0.088, 0.0779, 0.0092), (0.0881, 0.0777, 0.0088), (0.0874, 0.0777, 0.0092), (0.0877, 0.0779, 0.0093), (0.0877, 0.0776, 0.0088), (0.0877, 0.0776, 0.0088), (0.0877, 0.0779, 0.0093), (0.088, 0.0779, 0.0092), (0.0891, 0.0771, 0.0093), (0.0887, 0.0775, 0.0089), (0.0889, 0.0775, 0.0093), (0.0882, 0.0771, 0.0085), (0.0887, 0.0775, 0.0089), (0.0885, 0.0771, 0.0086), (0.0887, 0.0775, 0.0089), (0.0884, 0.0778, 0.0092), (0.0889, 0.0775, 0.0093), (0.0889, 0.0771, 0.0089), (0.0887, 0.0775, 0.0089), (0.0891, 0.0771, 0.0093), (0.0885, 0.0771, 0.0086), (0.0887, 0.0775, 0.0089), (0.0889, 0.0771, 0.0089), (0.0881, 0.0777, 0.0088), (0.088, 0.0779, 0.0092), (0.0884, 0.0778, 0.0092), (0.0887, 0.0775, 0.0089), (0.0882, 0.0771, 0.0085), (0.0881, 0.0777, 0.0088), (0.0882, 0.0771, 0.0085), (0.0877, 0.0776, 0.0088), (0.0881, 0.0777, 0.0088), (0.0873, 0.0773, 0.0089), (0.0877, 0.0776, 0.0088), (0.0878, 0.0772, 0.0085), (0.0878, 0.0772, 0.0085), (0.0877, 0.0776, 0.0088), (0.0882, 0.0771, 0.0085), (0.0887, 0.0775, 0.0089), (0.0881, 0.0777, 0.0088), (0.0884, 0.0778, 0.0092), (0.0871, 0.0774, 0.0094), (0.0874, 0.0777, 0.0092), (0.0873, 0.0773, 0.0089), (0.0873, 0.0773, 0.0089), (0.0874, 0.0777, 0.0092), (0.0877, 0.0776, 0.0088), (0.0882, 0.0782, 0.0119), (0.0887, 0.0781, 0.0119), (0.088, 0.0779, 0.0092), (0.0891, 0.0771, 0.0093), (0.0889, 0.0775, 0.0093), (0.0892, 0.0774, 0.0119), (0.0892, 0.0774, 0.0119), (0.0889, 0.0775, 0.0093), (0.0891, 0.0777, 0.0119), (0.0889, 0.0775, 0.0093), (0.0889, 0.0779, 0.0119), (0.0891, 0.0777, 0.0119), (0.0884, 0.0778, 0.0092), (0.0887, 0.0781, 0.0119), (0.0889, 0.0775, 0.0093), (0.0889, 0.0775, 0.0093), (0.0887, 0.0781, 0.0119), (0.0889, 0.0779, 0.0119), (0.088, 0.0779, 0.0092), (0.0887, 0.0781, 0.0119), (0.0884, 0.0778, 0.0092), (0.0874, 0.0778, 0.0124), (0.0874, 0.078, 0.0121), (0.0872, 0.0778, 0.012), (0.0878, 0.0781, 0.0124), (0.0882, 0.0779, 0.0127), (0.0883, 0.0782, 0.0123), (0.0874, 0.078, 0.0121), (0.0878, 0.0781, 0.0124), (0.0878, 0.0782, 0.0119), (0.0888, 0.0776, 0.0126), (0.0887, 0.0778, 0.0125), (0.0884, 0.0777, 0.0128), (0.0883, 0.0782, 0.0123), (0.0882, 0.0779, 0.0127), (0.0887, 0.0778, 0.0125), (0.0878, 0.0782, 0.0119), (0.0883, 0.0782, 0.0123), (0.0882, 0.0782, 0.0119), (0.0878, 0.0781, 0.0124), (0.0883, 0.0782, 0.0123), (0.0878, 0.0782, 0.0119), (0.0887, 0.0778, 0.0125), (0.0887, 0.0781, 0.0119), (0.0883, 0.0782, 0.0123), (0.0878, 0.0777, 0.0127), (0.0878, 0.0781, 0.0124), (0.0874, 0.0778, 0.0124), (0.0889, 0.0779, 0.0119), (0.0887, 0.0781, 0.0119), (0.0887, 0.0778, 0.0125), (0.0874, 0.0778, 0.0124), (0.0878, 0.0781, 0.0124), (0.0874, 0.078, 0.0121), (0.0887, 0.0781, 0.0119), (0.0882, 0.0782, 0.0119), (0.0883, 0.0782, 0.0123), (0.0882, 0.0779, 0.0127), (0.0884, 0.0777, 0.0128), (0.0887, 0.0778, 0.0125), (0.0882, 0.0779, 0.0127), (0.0878, 0.0777, 0.0127), (0.0884, 0.0777, 0.0128), (0.0878, 0.0781, 0.0124), (0.0878, 0.0777, 0.0127), (0.0882, 0.0779, 0.0127), (0.089, 0.0775, 0.0123), (0.0887, 0.0778, 0.0125), (0.0888, 0.0776, 0.0126), (0.0892, 0.0774, 0.0119), (0.0891, 0.0777, 0.0119), (0.089, 0.0775, 0.0123), (0.089, 0.0775, 0.0123), (0.0891, 0.0777, 0.0119), (0.0887, 0.0778, 0.0125), (0.0891, 0.0777, 0.0119), (0.0889, 0.0779, 0.0119), (0.0887, 0.0778, 0.0125)]
    custom float3 pos = (0, 0, 0)
    texCoord2f[] primvars:st = [(0.6417, 0.7834), (0.7635, 0.4395), (0.7243, 0.7706), (0.5568, 0.7349), (0.6977, 0.1186), (0.6417, 0.7834), (0.6417, 0.7834), (0.6977, 0.1186), (0.7635, 0.4395), (0.1482, 0.7253), (0.2655, 0.1279), (0.2512, 0.7322), (0.2512, 0.7322), (0.2655, 0.1279), (0.3493, 0.105), (0.1482, 0.7253), (0.1971, 0.1053), (0.2655, 0.1279), (0.7903, 0.1465), (0.7635, 0.4395), (0.6977, 0.1186), (0.2787, 0.0002), (0.1971, 0.1053), (0.1749, 0), (0.3493, 0.105), (0.2655, 0.1279), (0.2787, 0.0002), (0.2787, 0.0002), (0.2655, 0.1279), (0.1971, 0.1053), (0.3673, 0.1824), (0.5162, 0.1062), (0.4782, 0.2055), (0.7567, 0.5143), (0.8758, 0.6296), (0.7634, 0.6005), (0.5162, 0.1062), (0.6249, 0.2047), (0.4782, 0.2055), (0.4098, 0.0857), (0.5162, 0.1062), (0.3673, 0.1824), (0.4696, -0), (0.5162, 0.1062), (0.4098, 0.0857), (0.1749, 0), (0.1971, 0.1053), (0.1154, 0.1006), (0.8758, 0.6296), (0.7567, 0.5143), (0.9065, 0.4968), (0.7567, 0.5143), (0.8912, 0.3962), (0.9065, 0.4968), (0.8275, 0.3024), (0.8912, 0.3962), (0.7729, 0.4248), (0.7729, 0.4248), (0.8912, 0.3962), (0.7567, 0.5143), (0.8758, 0.6296), (0.9065, 0.4968), (0.9998, 0.562), (0.7903, 0.1465), (0.6977, 0.1186), (0.778, 0.0173), (0.778, 0.0173), (0.6977, 0.1186), (0.666, 0), (0.1482, 0.7253), (0.0378, 0.7397), (0.1971, 0.1053), (0.3673, 0.1824), (0.4782, 0.2055), (0.3329, 0.7986), (0.3329, 0.7986), (0.4782, 0.2055), (0.4023, 0.8242), (0.4782, 0.2055), (0.4763, 0.8267), (0.4023, 0.8242), (0.6249, 0.2047), (0.5396, 0.8449), (0.4782, 0.2055), (0.4782, 0.2055), (0.5396, 0.8449), (0.4763, 0.8267), (0.1971, 0.1053), (0.0378, 0.7397), (0.1154, 0.1006), (0.6877, 0.8744), (0.6417, 0.7834), (0.7243, 0.7706), (0.9076, 0.8658), (0.809, 0.9344), (0.815, 0.8144), (0.331, 0.7886), (0.2284, 0.8532), (0.2512, 0.7322), (0.6586, 0.9443), (0.6892, 0.8759), (0.7632, 0.9774), (0.815, 0.8144), (0.809, 0.9344), (0.6892, 0.8759), (0.2512, 0.7322), (0.1286, 0.8218), (0.1482, 0.7253), (0.2284, 0.8532), (0.1286, 0.8218), (0.2512, 0.7322), (0, 0.8734), (0.0378, 0.7397), (0.1286, 0.8218), (0.8974, 0.9784), (0.9076, 0.8658), (0.9993, 0.9489), (0.4763, 0.8267), (0.5396, 0.8449), (0.4622, 0.9657), (0.6877, 0.8744), (0.5646, 0.8764), (0.6417, 0.7834), (0.0378, 0.7397), (0.1482, 0.7253), (0.1286, 0.8218), (0.809, 0.9344), (0.7632, 0.9774), (0.6892, 0.8759), (0.809, 0.9344), (0.8974, 0.9784), (0.7632, 0.9774), (0.9076, 0.8658), (0.8974, 0.9784), (0.809, 0.9344), (0.3547, 0.9113), (0.4622, 0.9657), (0.3953, 1), (0.3329, 0.7986), (0.4023, 0.8242), (0.3547, 0.9113), (0.3547, 0.9113), (0.4023, 0.8242), (0.4622, 0.9657), (0.4023, 0.8242), (0.4763, 0.8267), (0.4622, 0.9657)] (
        interpolation = "faceVarying"
    )
    custom quatf quat = (1, 0, 0, 0)
    custom float4 rgba = (0.5, 0.5, 0.5, 1)
    custom float3 solimp = (0.9, 0.95, 0.001)
    custom float2 solref = (0.02, 1)
    custom string type = "mesh"
    custom float3 zaxis = (0, 0, 0)
}

def Scope "Looks"
{
    def Material "material_panda_white"
    {
        token outputs:surface.connect = </Looks/material_panda_white/PBRShader.outputs:surface>

        def Shader "PBRShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1)
            color3f inputs:emissive_color = (0, 0, 0)
            float inputs:metallic = 0
            token outputs:surface
        }
    }
}

